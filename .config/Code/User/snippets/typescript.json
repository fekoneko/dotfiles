{
	"React useContext hook implementation": {
		"prefix": "usecontext",
		"body": [
			"import { useContext } from 'react';",
			"import { $1Context, $1ContextValue } from '@/contexts/$1Context';",
			"",
			"export const use$1 = (): $1ContextValue => {",
			"  const context = useContext($1Context);",
			"  if (!context) throw new Error('use$1 must be used within a $1Provider');",
			"",
			"  return context;",
			"};",
			""
		]
	},
	"React useContext hook implementation with default export": {
		"prefix": "usecontextdefault",
		"body": [
			"import { useContext } from 'react';",
			"import { $1Context, $1ContextValue } from '@/contexts/$1Context';",
			"",
			"const use$1 = (): $1ContextValue => {",
			"  const context = useContext($1Context);",
			"  if (!context) throw new Error('use$1 must be used within a $1Provider');",
			"",
			"  return context;",
			"};",
			"",
			"export default use$1;",
			""
		]
	}
}